# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: ggroener <marvin@42.fr>                    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2016/07/19 06:43:27 by ggroener          #+#    #+#              #
#    Updated: 2016/08/16 08:18:11 by ggroener         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

NAME = corewar

CFLAGS = -Wall -Wextra -Werror 

CC = gcc

INCLUDES_PATH = ../includes/

IN_PATH = ./instructions/

SRCS_PATH = srcs/

SRCS_NAME1 = main.c\
			check_input.c\
			dupl_num.c\
			check_int.c\
			get_input.c\
			set_structs.c\
			fill_optab.c\
			fill_subfunc.c\
			load_program.c\
			reverse_bytes.c\
			read_byte_val.c\
			run_vm.c\

SRCS_NAME2 = load_op.c\
			arg_info.c\
			no_n_byte.c\
			move_pc.c\
			load_into_vm.c\
			load_bytes.c\
			sort_players.c\
			print_memory.c\
			print_ops.c\
			cleanup.c\
			run_instr.c\
			live_check.c\

IN_FILES = live.c\
		   zjmp.c\

SRCS2 = $(addprefix $(SRCS_PATH), $(SRCS_NAME2))

SRCS1 = $(addprefix $(SRCS_PATH), $(SRCS_NAME1))

IN_SRC = $(addprefix $(IN_PATH), $(IN_FILES))

SRCS = $(SRCS1) $(SRCS2)

OBJS_PATH = objs/

IN_OBJ = $(IN_FILES:.c=.o)

OBJS_NAME = $(SRCS_NAME1:.c=.o) $(SRCS_NAME2:.c=.o)

OBJS = $(addprefix $(OBJS_PATH), $(OBJS_NAME))

OBJS2 = $(addprefix $(OBJS_PATH), $(IN_OBJ))

#LIB_PATH = ../libft

#LIB_NAME = $(addprefix $(LIB_PATH), $(SRCS_NAME1))

LIBRARY = -L ../libft/ -lft

HEADER = 	$(INCLUDES_PATH)assembler.h \
			$(INCLUDES_PATH)corewar.h \
			$(INCLUDES_PATH)op.h \

all: qme odir $(NAME)

define colourecho
	@tput setaf 14
	@echo $1
	@tput sgr0
endef

define colourecho2
	@tput setaf 2
	@echo $1
	@tput sgr0
endef

$(NAME): $(OBJS) 
	@Make -C ../libft
	@$(call colourecho, " - Making $(NAME)")
	@$(CC) $(CFLAGS) -o $(NAME) $(IN_OBJ) $^ $(LIBRARY) -I$(INCLUDES_PATH)
	@clear
	@$(call colourecho, "Make Done!")

$(OBJS_PATH)%.o: $(SRCS_PATH)%.c
	@$(call colourecho, " - Compiling $<")
	@$(CC) $(CFLAGS) -o $@ -c $(IN_SRC) $< -I$(INCLUDES_PATH)
	@$(call colourecho, "Compiling Done!")

odir:
	@mkdir -p $(OBJS_PATH)

clean:
	@Make clean -C libft
	@$(call colourecho, " - Clearing object files")
	@rm -f $(OBJS)
	@$(call colourecho, "clean done!")

fclean: clean
	@Make fclean -C libft
	@$(call colourecho, "Clearing executable files")
	@rm -f $(NAME)
	@$(call colourecho, "fclean done")

re: fclean all
	@$(call colourecho, "re Done!")

format: norm me

norm:
	@clear
	@$(call colourecho2, "Norminette:")
	@norminette $(SRCS1)
	@norminette $(SRCS2)
	@norminette $(IN_SRC)
	@norminette $(HEADER)

qme:
	@rm -Rf author
	@whoami > author
	
me: qme
	cat -e author

.PHONY: clean fclean re odir
